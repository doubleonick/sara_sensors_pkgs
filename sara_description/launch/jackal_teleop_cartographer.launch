<launch>
  <!-- The "which_scan" parameter determines which sensor (Ouster OS1-64 or 
  Realsense D435i) will have the pointcloud it publishes mapped into a laserscan
  for use in Google Cartographer -->
  <arg name="which_scan" default="realsense"/>
  
  <!-- Configuration of Jackal which you would like to simulate.
       See jackal_description for details. -->
  <arg name="config" default="base" />
  
  <!-- Load Jackal's description, controllers, and teleop nodes. 
  <include file="$(find jackal_control)/launch/control.launch"/>-->
  <!---->
  <include file="$(find jackal_description)/launch/description.launch"> 
    <arg name="config" value="$(arg config)" />
  </include> 
  
  <!--The "sara_description" version of demo_pointcloud.launch merely comments out Rviz so that it won't try to launch in the field -->
  <include file="$(find sara_description)/launch/demo_pointcloud.launch" />
  <!--
  <include file="$(find realsense2_camera)/launch/demo_pointcloud.launch" />
  -->

  <!-- Wait for 22 ("time") seconds and then launch the pointcloud to laserscan
  node for the Ouster, if that is the selected pointcloud sensor 
  <group if="$(eval arg('which_scan') == 'ouster')">
    <include file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
      <arg name="time" value="22" />
      <arg name="pkg" value="pc2l" />
      <arg name="file" value="pc2l_ouster.launch" />
      <arg name="value" value="which_scan:=ouster" />
    </include>
  </group>-->
  <!-- Wait for 22 ("time") seconds and then launch the pointcloud to laserscan
  node for the Realsense, if that is the selected pointcloud sensor -->
  <group if="$(eval arg('which_scan') == 'realsense')">
    <include file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
      <arg name="time" value="22" />
      <arg name="pkg" value="pc2l" />
      <arg name="file" value="pc2l_realsense.launch" />
      <arg name="value" value="which_scan:=realsense" />
    </include>
  </group>
  <!-- -->
  <include file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
    <arg name="time" value="5" />
    <arg name="pkg" value="microstrain_mips" />
    <arg name="file" value="microstrain.launch" />
  </include>
  <!--<include file="$(find microstrain_mips)/launch/microstrain.launch"/>-->
  <!--
  <include file="$(find jackal_navigation)/launch/include/amcl.launch">
    <arg name="use_map_topic" value="true"/>
  </include>
  -->
  <!-- Wait for 10 ("time") seconds and then launch Cartographer for Jackal -->
  <include file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
    <arg name="time" value="10" />
    <arg name="pkg" value="jackal_cartographer_navigation" />
    <arg name="file" value="cartographer_demo.launch" />
  </include>
  <!-- Wait for 15 ("time") seconds and then launch the RViz for Jackal with the
  view_robot node.  This will allow visualization of the robot, its map, and
  laser scan data.  The node will also allow 2D pose targets to be placed for
  the Jackal to navigate to using Cartographer. -->
  <include file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
    <arg name="time" value="15" />
    <arg name="pkg" value="jackal_viz" />
    <arg name="file" value="view_robot.launch" />
    <arg name="value" value="config:=gmapping" />
  </include>
  
  <!--
  <node pkg="teleop_twist_keyboard" name="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" />
  -->

</launch>
